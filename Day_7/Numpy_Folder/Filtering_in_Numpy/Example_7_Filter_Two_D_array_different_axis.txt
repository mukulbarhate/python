import numpy as np

# axis=0 works on all columns of 2d array , so first argument : indicates  all the rows

# axis=1 works on all rows of 2d array, so second argument : indicates all the columns

a = np.arange(12).reshape((3, 4))
print(a)
# [[ 0  1  2  3]
#  [ 4  5  6  7]
#  [ 8  9 10 11]]
print("***************")
"""
np.all() method return True if all the values fulfills the condition. 
This return value maps with the original array to give the filtered values
"""
print(a[:, np.all(a < 10, axis = 0)])
# [[0 1]
#  [4 5]
#  [8 9]]
print("*********************")
""" np.any() method return true if any of the values fulfill the condition. 
 This return value maps with the original array to give the filtered values. """
print(a[:,np.any(a < 10, axis = 0)])
# [[ 0  1  2  3]
#  [ 4  5  6  7]
#  [ 8  9 10 11]]
print("*******************")
print(a[:,np.any(a > 8, axis = 0)])
# [[ 1  2  3]
#  [ 5  6  7]
#  [ 9 10 11]]
print("**************************")
print(a[np.any(a < 10, axis = 1),:])        # Row_element - if you get any one element which satisfies a<10 : Take all columns
# [[ 0  1  2  3]
#  [ 4  5  6  7]
#  [ 8  9 10 11]]
print("**************************")
print(a[np.all(a < 10, axis = 1),:])       # Row_element - if all satisfies a<10 only then True : Take all columns
# [[0 1 2 3]
#  [4 5 6 7]]

print("selected rows")
print(a[1:3,np.any(a > 8, axis = 0)])   # 1 to 2 rows
# [[ 5  6  7]
#  [ 9 10 11]]

print("selected columns")
print(a[np.all(a < 10, axis = 1),:2])    # 0 to 1 columns
# [[0 1]
#  [4 5]]